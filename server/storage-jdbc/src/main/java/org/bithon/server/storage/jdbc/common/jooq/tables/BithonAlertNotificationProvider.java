/*
 * This file is generated by jOOQ.
 */
package org.bithon.server.storage.jdbc.common.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.bithon.server.storage.jdbc.common.jooq.DefaultSchema;
import org.bithon.server.storage.jdbc.common.jooq.Indexes;
import org.bithon.server.storage.jdbc.common.jooq.Keys;
import org.bithon.server.storage.jdbc.common.jooq.tables.records.BithonAlertNotificationProviderRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Alert notification providers
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BithonAlertNotificationProvider extends TableImpl<BithonAlertNotificationProviderRecord> {

    private static final long serialVersionUID = -810095062;

    /**
     * The reference instance of <code>bithon_alert_notification_provider</code>
     */
    public static final BithonAlertNotificationProvider BITHON_ALERT_NOTIFICATION_PROVIDER = new BithonAlertNotificationProvider();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BithonAlertNotificationProviderRecord> getRecordType() {
        return BithonAlertNotificationProviderRecord.class;
    }

    /**
     * The column <code>bithon_alert_notification_provider.provider_id</code>.
     */
    public final TableField<BithonAlertNotificationProviderRecord, String> PROVIDER_ID = createField(DSL.name("provider_id"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>bithon_alert_notification_provider.name</code>.
     */
    public final TableField<BithonAlertNotificationProviderRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bithon_alert_notification_provider.type</code>.
     */
    public final TableField<BithonAlertNotificationProviderRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>bithon_alert_notification_provider.payload</code>. provider payload
     */
    public final TableField<BithonAlertNotificationProviderRecord, String> PAYLOAD = createField(DSL.name("payload"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "provider payload");

    /**
     * The column <code>bithon_alert_notification_provider.created_at</code>. create time
     */
    public final TableField<BithonAlertNotificationProviderRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "create time");

    /**
     * Create a <code>bithon_alert_notification_provider</code> table reference
     */
    public BithonAlertNotificationProvider() {
        this(DSL.name("bithon_alert_notification_provider"), null);
    }

    /**
     * Create an aliased <code>bithon_alert_notification_provider</code> table reference
     */
    public BithonAlertNotificationProvider(String alias) {
        this(DSL.name(alias), BITHON_ALERT_NOTIFICATION_PROVIDER);
    }

    /**
     * Create an aliased <code>bithon_alert_notification_provider</code> table reference
     */
    public BithonAlertNotificationProvider(Name alias) {
        this(alias, BITHON_ALERT_NOTIFICATION_PROVIDER);
    }

    private BithonAlertNotificationProvider(Name alias, Table<BithonAlertNotificationProviderRecord> aliased) {
        this(alias, aliased, null);
    }

    private BithonAlertNotificationProvider(Name alias, Table<BithonAlertNotificationProviderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Alert notification providers"));
    }

    public <O extends Record> BithonAlertNotificationProvider(Table<O> child, ForeignKey<O, BithonAlertNotificationProviderRecord> key) {
        super(child, key, BITHON_ALERT_NOTIFICATION_PROVIDER);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BITHON_ALERT_NOTIFICATION_PROVIDER_ALERT_NOTIFICATION_PROVIDER_NAME);
    }

    @Override
    public List<UniqueKey<BithonAlertNotificationProviderRecord>> getKeys() {
        return Arrays.<UniqueKey<BithonAlertNotificationProviderRecord>>asList(Keys.KEY_BITHON_ALERT_NOTIFICATION_PROVIDER_ALERT_NOTIFICATION_PROVIDER_NAME);
    }

    @Override
    public BithonAlertNotificationProvider as(String alias) {
        return new BithonAlertNotificationProvider(DSL.name(alias), this);
    }

    @Override
    public BithonAlertNotificationProvider as(Name alias) {
        return new BithonAlertNotificationProvider(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BithonAlertNotificationProvider rename(String name) {
        return new BithonAlertNotificationProvider(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BithonAlertNotificationProvider rename(Name name) {
        return new BithonAlertNotificationProvider(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
