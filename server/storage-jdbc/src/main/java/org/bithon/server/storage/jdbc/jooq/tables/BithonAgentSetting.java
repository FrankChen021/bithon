/*
 * This file is generated by jOOQ.
 */
package org.bithon.server.storage.jdbc.jooq.tables;


import org.bithon.server.storage.jdbc.jooq.DefaultSchema;
import org.bithon.server.storage.jdbc.jooq.Indexes;
import org.bithon.server.storage.jdbc.jooq.Keys;
import org.bithon.server.storage.jdbc.jooq.tables.records.BithonAgentSettingRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 配置
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BithonAgentSetting extends TableImpl<BithonAgentSettingRecord> {

    private static final long serialVersionUID = 850252921;

    /**
     * The reference instance of <code>bithon_agent_setting</code>
     */
    public static final BithonAgentSetting BITHON_AGENT_SETTING = new BithonAgentSetting();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BithonAgentSettingRecord> getRecordType() {
        return BithonAgentSettingRecord.class;
    }

    /**
     * The column <code>bithon_agent_setting.timestamp</code>. Created Timestamp
     */
    public final TableField<BithonAgentSettingRecord, Timestamp> TIMESTAMP = createField(DSL.name("timestamp"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "Created Timestamp");

    /**
     * The column <code>bithon_agent_setting.appName</code>. 名称
     */
    public final TableField<BithonAgentSettingRecord, String> APPNAME = createField(DSL.name("appName"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "名称");

    /**
     * The column <code>bithon_agent_setting.settingName</code>. 配置名称
     */
    public final TableField<BithonAgentSettingRecord, String> SETTINGNAME = createField(DSL.name("settingName"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "配置名称");

    /**
     * The column <code>bithon_agent_setting.setting</code>. 设置
     */
    public final TableField<BithonAgentSettingRecord, String> SETTING = createField(DSL.name("setting"), org.jooq.impl.SQLDataType.CLOB, this, "设置");

    /**
     * The column <code>bithon_agent_setting.updatedAt</code>. 更新时间
     */
    public final TableField<BithonAgentSettingRecord, Timestamp> UPDATEDAT = createField(DSL.name("updatedAt"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>bithon_agent_setting</code> table reference
     */
    public BithonAgentSetting() {
        this(DSL.name("bithon_agent_setting"), null);
    }

    /**
     * Create an aliased <code>bithon_agent_setting</code> table reference
     */
    public BithonAgentSetting(String alias) {
        this(DSL.name(alias), BITHON_AGENT_SETTING);
    }

    /**
     * Create an aliased <code>bithon_agent_setting</code> table reference
     */
    public BithonAgentSetting(Name alias) {
        this(alias, BITHON_AGENT_SETTING);
    }

    private BithonAgentSetting(Name alias, Table<BithonAgentSettingRecord> aliased) {
        this(alias, aliased, null);
    }

    private BithonAgentSetting(Name alias, Table<BithonAgentSettingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("配置"));
    }

    public <O extends Record> BithonAgentSetting(Table<O> child, ForeignKey<O, BithonAgentSettingRecord> key) {
        super(child, key, BITHON_AGENT_SETTING);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BITHON_AGENT_SETTING_KEY_APPNAME);
    }

    @Override
    public List<UniqueKey<BithonAgentSettingRecord>> getKeys() {
        return Arrays.<UniqueKey<BithonAgentSettingRecord>>asList(Keys.KEY_BITHON_AGENT_SETTING_KEY_APPNAME);
    }

    @Override
    public BithonAgentSetting as(String alias) {
        return new BithonAgentSetting(DSL.name(alias), this);
    }

    @Override
    public BithonAgentSetting as(Name alias) {
        return new BithonAgentSetting(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BithonAgentSetting rename(String name) {
        return new BithonAgentSetting(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BithonAgentSetting rename(Name name) {
        return new BithonAgentSetting(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Timestamp, String, String, String, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
