/*
 * This file is generated by jOOQ.
 */
package org.bithon.server.storage.jdbc.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.bithon.server.storage.jdbc.jooq.DefaultSchema;
import org.bithon.server.storage.jdbc.jooq.Indexes;
import org.bithon.server.storage.jdbc.jooq.tables.records.BithonTraceSpanTagIndexRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BithonTraceSpanTagIndex extends TableImpl<BithonTraceSpanTagIndexRecord> {

    private static final long serialVersionUID = -542078485;

    /**
     * The reference instance of <code>bithon_trace_span_tag_index</code>
     */
    public static final BithonTraceSpanTagIndex BITHON_TRACE_SPAN_TAG_INDEX = new BithonTraceSpanTagIndex();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BithonTraceSpanTagIndexRecord> getRecordType() {
        return BithonTraceSpanTagIndexRecord.class;
    }

    /**
     * The column <code>bithon_trace_span_tag_index.timestamp</code>. Milli Seconds
     */
    public final TableField<BithonTraceSpanTagIndexRecord, Timestamp> TIMESTAMP = createField(DSL.name("timestamp"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "Milli Seconds");

    /**
     * The column <code>bithon_trace_span_tag_index.appName</code>.
     */
    public final TableField<BithonTraceSpanTagIndexRecord, String> APPNAME = createField(DSL.name("appName"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bithon_trace_span_tag_index.name</code>. tag name
     */
    public final TableField<BithonTraceSpanTagIndexRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "tag name");

    /**
     * The column <code>bithon_trace_span_tag_index.value</code>. tag value
     */
    public final TableField<BithonTraceSpanTagIndexRecord, String> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "tag value");

    /**
     * The column <code>bithon_trace_span_tag_index.traceId</code>.
     */
    public final TableField<BithonTraceSpanTagIndexRecord, String> TRACEID = createField(DSL.name("traceId"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>bithon_trace_span_tag_index</code> table reference
     */
    public BithonTraceSpanTagIndex() {
        this(DSL.name("bithon_trace_span_tag_index"), null);
    }

    /**
     * Create an aliased <code>bithon_trace_span_tag_index</code> table reference
     */
    public BithonTraceSpanTagIndex(String alias) {
        this(DSL.name(alias), BITHON_TRACE_SPAN_TAG_INDEX);
    }

    /**
     * Create an aliased <code>bithon_trace_span_tag_index</code> table reference
     */
    public BithonTraceSpanTagIndex(Name alias) {
        this(alias, BITHON_TRACE_SPAN_TAG_INDEX);
    }

    private BithonTraceSpanTagIndex(Name alias, Table<BithonTraceSpanTagIndexRecord> aliased) {
        this(alias, aliased, null);
    }

    private BithonTraceSpanTagIndex(Name alias, Table<BithonTraceSpanTagIndexRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BithonTraceSpanTagIndex(Table<O> child, ForeignKey<O, BithonTraceSpanTagIndexRecord> key) {
        super(child, key, BITHON_TRACE_SPAN_TAG_INDEX);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BITHON_TRACE_SPAN_TAG_INDEX_IDX_TST__TIMESTAMP, Indexes.BITHON_TRACE_SPAN_TAG_INDEX_IDX_TST_APP_NAME, Indexes.BITHON_TRACE_SPAN_TAG_INDEX_IDX_TST_NAME);
    }

    @Override
    public BithonTraceSpanTagIndex as(String alias) {
        return new BithonTraceSpanTagIndex(DSL.name(alias), this);
    }

    @Override
    public BithonTraceSpanTagIndex as(Name alias) {
        return new BithonTraceSpanTagIndex(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BithonTraceSpanTagIndex rename(String name) {
        return new BithonTraceSpanTagIndex(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BithonTraceSpanTagIndex rename(Name name) {
        return new BithonTraceSpanTagIndex(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Timestamp, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
