/*
 * This file is generated by jOOQ.
 */
package org.bithon.server.storage.jdbc.common.jooq.tables.records;


import org.bithon.server.storage.jdbc.common.jooq.tables.BithonAlertState;
import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;

import java.time.LocalDateTime;


/**
 * Alerting State
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BithonAlertStateRecord extends TableRecordImpl<BithonAlertStateRecord> implements Record5<String, Integer, LocalDateTime, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>bithon_alert_state.alert_id</code>.
     */
    public void setAlertId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bithon_alert_state.alert_id</code>.
     */
    public String getAlertId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bithon_alert_state.alert_status</code>. See the
     * AlertStatus enum
     */
    public void setAlertStatus(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>bithon_alert_state.alert_status</code>. See the
     * AlertStatus enum
     */
    public Integer getAlertStatus() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>bithon_alert_state.last_alert_at</code>.
     */
    public void setLastAlertAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>bithon_alert_state.last_alert_at</code>.
     */
    public LocalDateTime getLastAlertAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>bithon_alert_state.last_record_id</code>. The PK ID in
     * bithon_alert_record table
     */
    public void setLastRecordId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bithon_alert_state.last_record_id</code>. The PK ID in
     * bithon_alert_record table
     */
    public String getLastRecordId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>bithon_alert_state.update_at</code>. when the record is
     * updated
     */
    public void setUpdateAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>bithon_alert_state.update_at</code>. when the record is
     * updated
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, Integer, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, Integer, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return BithonAlertState.BITHON_ALERT_STATE.ALERT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return BithonAlertState.BITHON_ALERT_STATE.ALERT_STATUS;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return BithonAlertState.BITHON_ALERT_STATE.LAST_ALERT_AT;
    }

    @Override
    public Field<String> field4() {
        return BithonAlertState.BITHON_ALERT_STATE.LAST_RECORD_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return BithonAlertState.BITHON_ALERT_STATE.UPDATE_AT;
    }

    @Override
    public String component1() {
        return getAlertId();
    }

    @Override
    public Integer component2() {
        return getAlertStatus();
    }

    @Override
    public LocalDateTime component3() {
        return getLastAlertAt();
    }

    @Override
    public String component4() {
        return getLastRecordId();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateAt();
    }

    @Override
    public String value1() {
        return getAlertId();
    }

    @Override
    public Integer value2() {
        return getAlertStatus();
    }

    @Override
    public LocalDateTime value3() {
        return getLastAlertAt();
    }

    @Override
    public String value4() {
        return getLastRecordId();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateAt();
    }

    @Override
    public BithonAlertStateRecord value1(String value) {
        setAlertId(value);
        return this;
    }

    @Override
    public BithonAlertStateRecord value2(Integer value) {
        setAlertStatus(value);
        return this;
    }

    @Override
    public BithonAlertStateRecord value3(LocalDateTime value) {
        setLastAlertAt(value);
        return this;
    }

    @Override
    public BithonAlertStateRecord value4(String value) {
        setLastRecordId(value);
        return this;
    }

    @Override
    public BithonAlertStateRecord value5(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public BithonAlertStateRecord values(String value1, Integer value2, LocalDateTime value3, String value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BithonAlertStateRecord
     */
    public BithonAlertStateRecord() {
        super(BithonAlertState.BITHON_ALERT_STATE);
    }

    /**
     * Create a detached, initialised BithonAlertStateRecord
     */
    public BithonAlertStateRecord(String alertId, Integer alertStatus, LocalDateTime lastAlertAt, String lastRecordId, LocalDateTime updateAt) {
        super(BithonAlertState.BITHON_ALERT_STATE);

        setAlertId(alertId);
        setAlertStatus(alertStatus);
        setLastAlertAt(lastAlertAt);
        setLastRecordId(lastRecordId);
        setUpdateAt(updateAt);
    }
}
