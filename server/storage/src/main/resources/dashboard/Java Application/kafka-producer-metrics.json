{
  "id": "kafka-producer-metrics",
  "title": "Kafka Producer",
  "filter": {
    "selectors": [
      {
        "type": "datasource",
        "name": "kafka-producer-metrics",
        "fields": [
          { "name": "appName", "width": 200, "allowClear": false },
          "instanceName",
          "cluster",
          "nodeId",
          "topic",
          "clientId"
        ]
      }
    ]
  },
  "charts": [
    {
      "title": "Produce Records",
      "width": 2,
      "type": "line",
      "columns": ["recordCount", "errorRecordCount", "retryRecordCount"],
      "query": {
        "type": "timeseries",
        "dataSource": "kafka-producer-metrics",
        "fields": [
          {
            "name": "recordCount",
            "expression": "sum(recordCount)"
          },
          {
            "name": "errorRecordCount",
            "expression": "sum(errorRecordCount)"
          },
          {
            "name": "retryRecordCount",
            "expression": "sum(retryRecordCount)"
          }
        ]
      },
      "details": {
        "columns": ["cluster", "topic", "clientId", "recordCount", "errorRecordCount"],
        "query": {
          "type": "groupBy",
          "dataSource": "kafka-producer-metrics",
          "fields": [
            {
              "name": "recordCount",
              "expression": "sum(recordCount)"
            },
            {
              "name": "errorRecordCount",
              "expression": "sum(errorRecordCount)"
            }
          ],
          "groupBy": ["cluster", "topic", "clientId"],
          "orderBy": {
            "name": "recordCount",
            "order": "desc"
          },
          "limit": 15
        },
        "tracing": {
          "mappings": {
            "cluster": "tags['net.peer']",
            "topic": "tags['messaging.kafka.topic']",
            "clientId": "tags['messaging.kafka.client_id']"
          },
          "filter": "name= 'kafka' AND kind = 'PRODUCER'"
        }
      }
    },
    {
      "title": "Request",
      "width": 2,
      "type": "line",
      "columns": [
        "qps",
        {
          "name": "requestCount",
          "yAxis": 1
        }
      ],
      "query": {
        "type": "timeseries",
        "dataSource": "kafka-network-metrics",
        "fields": [
          {
            "name": "qps",
            "expression": "round(sum(requestCount)/{interval}, 2)"
          },
          {
            "name": "requestCount",
            "expression": "sum(requestCount)"
          }
        ],
        "filter": "type = 'Produce'"
      }
    },
    {
      "title": "Record Size",
      "width": 4,
      "type": "line",
      "yAxis": [
        {
          "format": "binary_byte"
        }
      ],
      "columns": ["batchSize", "maxRecordBytes"],
      "query": {
        "type": "timeseries",
        "dataSource": "kafka-producer-metrics",
        "fields": [
          {
            "name": "batchSize",
            "expression": "sum(batchSize)"
          },
          {
            "name": "maxRecordBytes",
            "expression": "max(maxRecordBytes)"
          }
        ]
      }
    },
    {
      "title": "Latency",
      "width": 4,
      "type": "line",
      "yAxis": [
        {
          "format": "millisecond"
        }
      ],
      "columns": ["minResponseTime", "avgResponseTime", "maxResponseTime"],
      "query": {
        "type": "timeseries",
        "dataSource": "kafka-network-metrics",
        "fields": [
          {
            "name": "minResponseTime",
            "expression": "min(minResponseTime)"
          },
          {
            "name": "avgResponseTime",
            "expression": "round(sum(responseTime) * 1.0 /sum(requestCount),2)"
          },
          {
            "name": "maxResponseTime",
            "expression": "max(maxResponseTime)"
          }
        ],
        "filter": "type = 'Produce'"
      }
    }
  ]
}
