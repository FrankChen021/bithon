/*
 * This file is generated by jOOQ.
 */
package com.sbss.bithon.component.db.jooq.tables.records;


import com.sbss.bithon.component.db.jooq.tables.BithonWebServerMetrics;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BithonWebServerMetricsRecord extends TableRecordImpl<BithonWebServerMetricsRecord> implements Record7<Timestamp, String, String, Long, Long, Long, Long> {

    private static final long serialVersionUID = 1099487306;

    /**
     * Setter for <code>bithon_web_server_metrics.timestamp</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(0, value);
    }

    /**
     * Getter for <code>bithon_web_server_metrics.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(0);
    }

    /**
     * Setter for <code>bithon_web_server_metrics.appName</code>.
     */
    public void setAppname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bithon_web_server_metrics.appName</code>.
     */
    public String getAppname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bithon_web_server_metrics.instanceName</code>.
     */
    public void setInstancename(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bithon_web_server_metrics.instanceName</code>.
     */
    public String getInstancename() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bithon_web_server_metrics.connectionCount</code>.
     */
    public void setConnectioncount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>bithon_web_server_metrics.connectionCount</code>.
     */
    public Long getConnectioncount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>bithon_web_server_metrics.maxConnections</code>.
     */
    public void setMaxconnections(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>bithon_web_server_metrics.maxConnections</code>.
     */
    public Long getMaxconnections() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>bithon_web_server_metrics.activeThreads</code>.
     */
    public void setActivethreads(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>bithon_web_server_metrics.activeThreads</code>.
     */
    public Long getActivethreads() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>bithon_web_server_metrics.maxThreads</code>.
     */
    public void setMaxthreads(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>bithon_web_server_metrics.maxThreads</code>.
     */
    public Long getMaxthreads() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Timestamp, String, String, Long, Long, Long, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Timestamp, String, String, Long, Long, Long, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Timestamp> field1() {
        return BithonWebServerMetrics.BITHON_WEB_SERVER_METRICS.TIMESTAMP;
    }

    @Override
    public Field<String> field2() {
        return BithonWebServerMetrics.BITHON_WEB_SERVER_METRICS.APPNAME;
    }

    @Override
    public Field<String> field3() {
        return BithonWebServerMetrics.BITHON_WEB_SERVER_METRICS.INSTANCENAME;
    }

    @Override
    public Field<Long> field4() {
        return BithonWebServerMetrics.BITHON_WEB_SERVER_METRICS.CONNECTIONCOUNT;
    }

    @Override
    public Field<Long> field5() {
        return BithonWebServerMetrics.BITHON_WEB_SERVER_METRICS.MAXCONNECTIONS;
    }

    @Override
    public Field<Long> field6() {
        return BithonWebServerMetrics.BITHON_WEB_SERVER_METRICS.ACTIVETHREADS;
    }

    @Override
    public Field<Long> field7() {
        return BithonWebServerMetrics.BITHON_WEB_SERVER_METRICS.MAXTHREADS;
    }

    @Override
    public Timestamp component1() {
        return getTimestamp();
    }

    @Override
    public String component2() {
        return getAppname();
    }

    @Override
    public String component3() {
        return getInstancename();
    }

    @Override
    public Long component4() {
        return getConnectioncount();
    }

    @Override
    public Long component5() {
        return getMaxconnections();
    }

    @Override
    public Long component6() {
        return getActivethreads();
    }

    @Override
    public Long component7() {
        return getMaxthreads();
    }

    @Override
    public Timestamp value1() {
        return getTimestamp();
    }

    @Override
    public String value2() {
        return getAppname();
    }

    @Override
    public String value3() {
        return getInstancename();
    }

    @Override
    public Long value4() {
        return getConnectioncount();
    }

    @Override
    public Long value5() {
        return getMaxconnections();
    }

    @Override
    public Long value6() {
        return getActivethreads();
    }

    @Override
    public Long value7() {
        return getMaxthreads();
    }

    @Override
    public BithonWebServerMetricsRecord value1(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public BithonWebServerMetricsRecord value2(String value) {
        setAppname(value);
        return this;
    }

    @Override
    public BithonWebServerMetricsRecord value3(String value) {
        setInstancename(value);
        return this;
    }

    @Override
    public BithonWebServerMetricsRecord value4(Long value) {
        setConnectioncount(value);
        return this;
    }

    @Override
    public BithonWebServerMetricsRecord value5(Long value) {
        setMaxconnections(value);
        return this;
    }

    @Override
    public BithonWebServerMetricsRecord value6(Long value) {
        setActivethreads(value);
        return this;
    }

    @Override
    public BithonWebServerMetricsRecord value7(Long value) {
        setMaxthreads(value);
        return this;
    }

    @Override
    public BithonWebServerMetricsRecord values(Timestamp value1, String value2, String value3, Long value4, Long value5, Long value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BithonWebServerMetricsRecord
     */
    public BithonWebServerMetricsRecord() {
        super(BithonWebServerMetrics.BITHON_WEB_SERVER_METRICS);
    }

    /**
     * Create a detached, initialised BithonWebServerMetricsRecord
     */
    public BithonWebServerMetricsRecord(Timestamp timestamp, String appname, String instancename, Long connectioncount, Long maxconnections, Long activethreads, Long maxthreads) {
        super(BithonWebServerMetrics.BITHON_WEB_SERVER_METRICS);

        set(0, timestamp);
        set(1, appname);
        set(2, instancename);
        set(3, connectioncount);
        set(4, maxconnections);
        set(5, activethreads);
        set(6, maxthreads);
    }
}
