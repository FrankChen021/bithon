/*
 * This file is generated by jOOQ.
 */
package com.sbss.bithon.component.db.jooq.tables;


import com.sbss.bithon.component.db.jooq.DefaultSchema;
import com.sbss.bithon.component.db.jooq.Indexes;
import com.sbss.bithon.component.db.jooq.Keys;
import com.sbss.bithon.component.db.jooq.tables.records.BithonWebRequestMetricsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BithonWebRequestMetrics extends TableImpl<BithonWebRequestMetricsRecord> {

    private static final long serialVersionUID = 1528436997;

    /**
     * The reference instance of <code>bithon_web_request_metrics</code>
     */
    public static final BithonWebRequestMetrics BITHON_WEB_REQUEST_METRICS = new BithonWebRequestMetrics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BithonWebRequestMetricsRecord> getRecordType() {
        return BithonWebRequestMetricsRecord.class;
    }

    /**
     * The column <code>bithon_web_request_metrics.timestamp</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, Timestamp> TIMESTAMP = createField(DSL.name("timestamp"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bithon_web_request_metrics.appName</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, String> APPNAME = createField(DSL.name("appName"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bithon_web_request_metrics.instanceName</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, String> INSTANCENAME = createField(DSL.name("instanceName"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bithon_web_request_metrics.uri</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, String> URI = createField(DSL.name("uri"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>bithon_web_request_metrics.costTime</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, Long> COSTTIME = createField(DSL.name("costTime"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>bithon_web_request_metrics.requestCount</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, Long> REQUESTCOUNT = createField(DSL.name("requestCount"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>bithon_web_request_metrics.errorCount</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, Long> ERRORCOUNT = createField(DSL.name("errorCount"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>bithon_web_request_metrics.count4xx</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, Long> COUNT4XX = createField(DSL.name("count4xx"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>bithon_web_request_metrics.count5xx</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, Long> COUNT5XX = createField(DSL.name("count5xx"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>bithon_web_request_metrics.requestByteSize</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, Long> REQUESTBYTESIZE = createField(DSL.name("requestByteSize"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>bithon_web_request_metrics.responseByteSize</code>.
     */
    public final TableField<BithonWebRequestMetricsRecord, Long> RESPONSEBYTESIZE = createField(DSL.name("responseByteSize"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>bithon_web_request_metrics</code> table reference
     */
    public BithonWebRequestMetrics() {
        this(DSL.name("bithon_web_request_metrics"), null);
    }

    /**
     * Create an aliased <code>bithon_web_request_metrics</code> table reference
     */
    public BithonWebRequestMetrics(String alias) {
        this(DSL.name(alias), BITHON_WEB_REQUEST_METRICS);
    }

    /**
     * Create an aliased <code>bithon_web_request_metrics</code> table reference
     */
    public BithonWebRequestMetrics(Name alias) {
        this(alias, BITHON_WEB_REQUEST_METRICS);
    }

    private BithonWebRequestMetrics(Name alias, Table<BithonWebRequestMetricsRecord> aliased) {
        this(alias, aliased, null);
    }

    private BithonWebRequestMetrics(Name alias, Table<BithonWebRequestMetricsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BithonWebRequestMetrics(Table<O> child, ForeignKey<O, BithonWebRequestMetricsRecord> key) {
        super(child, key, BITHON_WEB_REQUEST_METRICS);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BITHON_WEB_REQUEST_METRICS_IDX_KEY);
    }

    @Override
    public List<UniqueKey<BithonWebRequestMetricsRecord>> getKeys() {
        return Arrays.<UniqueKey<BithonWebRequestMetricsRecord>>asList(Keys.KEY_BITHON_WEB_REQUEST_METRICS_IDX_KEY);
    }

    @Override
    public BithonWebRequestMetrics as(String alias) {
        return new BithonWebRequestMetrics(DSL.name(alias), this);
    }

    @Override
    public BithonWebRequestMetrics as(Name alias) {
        return new BithonWebRequestMetrics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BithonWebRequestMetrics rename(String name) {
        return new BithonWebRequestMetrics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BithonWebRequestMetrics rename(Name name) {
        return new BithonWebRequestMetrics(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Timestamp, String, String, String, Long, Long, Long, Long, Long, Long, Long> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
