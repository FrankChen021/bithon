/*
 * This file is generated by jOOQ.
 */
package com.sbss.bithon.component.db.jooq.tables.records;


import com.sbss.bithon.component.db.jooq.tables.BithonJvmMetrics;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BithonJvmMetricsRecord extends TableRecordImpl<BithonJvmMetricsRecord> implements Record14<Timestamp, String, String, Double, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long> {

    private static final long serialVersionUID = 1090408725;

    /**
     * Setter for <code>bithon_jvm_metrics.timestamp</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(0, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(0);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.appName</code>.
     */
    public void setAppname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.appName</code>.
     */
    public String getAppname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.instanceName</code>.
     */
    public void setInstancename(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.instanceName</code>.
     */
    public String getInstancename() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.processCpuLoad</code>.
     */
    public void setProcesscpuload(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.processCpuLoad</code>.
     */
    public Double getProcesscpuload() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.instanceUpTime</code>.
     */
    public void setInstanceuptime(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.instanceUpTime</code>.
     */
    public Long getInstanceuptime() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.instanceStartTime</code>.
     */
    public void setInstancestarttime(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.instanceStartTime</code>.
     */
    public Long getInstancestarttime() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.heap</code>. -Xmx
     */
    public void setHeap(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.heap</code>. -Xmx
     */
    public Long getHeap() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.heapInit</code>. -Xms
     */
    public void setHeapinit(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.heapInit</code>. -Xms
     */
    public Long getHeapinit() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.heapUsed</code>.
     */
    public void setHeapused(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.heapUsed</code>.
     */
    public Long getHeapused() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.heapCommitted</code>. 可使用的内存大小，包括used
     */
    public void setHeapcommitted(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.heapCommitted</code>. 可使用的内存大小，包括used
     */
    public Long getHeapcommitted() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.peakThreads</code>. number of peak threads
     */
    public void setPeakthreads(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.peakThreads</code>. number of peak threads
     */
    public Long getPeakthreads() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.daemonThreads</code>. number of daemon threads
     */
    public void setDaemonthreads(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.daemonThreads</code>. number of daemon threads
     */
    public Long getDaemonthreads() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.totalThreads</code>. number of total threads
     */
    public void setTotalthreads(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.totalThreads</code>. number of total threads
     */
    public Long getTotalthreads() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>bithon_jvm_metrics.activeThreads</code>. number of active threads
     */
    public void setActivethreads(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>bithon_jvm_metrics.activeThreads</code>. number of active threads
     */
    public Long getActivethreads() {
        return (Long) get(13);
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Timestamp, String, String, Double, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Timestamp, String, String, Double, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Timestamp> field1() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.TIMESTAMP;
    }

    @Override
    public Field<String> field2() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.APPNAME;
    }

    @Override
    public Field<String> field3() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.INSTANCENAME;
    }

    @Override
    public Field<Double> field4() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.PROCESSCPULOAD;
    }

    @Override
    public Field<Long> field5() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.INSTANCEUPTIME;
    }

    @Override
    public Field<Long> field6() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.INSTANCESTARTTIME;
    }

    @Override
    public Field<Long> field7() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.HEAP;
    }

    @Override
    public Field<Long> field8() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.HEAPINIT;
    }

    @Override
    public Field<Long> field9() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.HEAPUSED;
    }

    @Override
    public Field<Long> field10() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.HEAPCOMMITTED;
    }

    @Override
    public Field<Long> field11() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.PEAKTHREADS;
    }

    @Override
    public Field<Long> field12() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.DAEMONTHREADS;
    }

    @Override
    public Field<Long> field13() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.TOTALTHREADS;
    }

    @Override
    public Field<Long> field14() {
        return BithonJvmMetrics.BITHON_JVM_METRICS.ACTIVETHREADS;
    }

    @Override
    public Timestamp component1() {
        return getTimestamp();
    }

    @Override
    public String component2() {
        return getAppname();
    }

    @Override
    public String component3() {
        return getInstancename();
    }

    @Override
    public Double component4() {
        return getProcesscpuload();
    }

    @Override
    public Long component5() {
        return getInstanceuptime();
    }

    @Override
    public Long component6() {
        return getInstancestarttime();
    }

    @Override
    public Long component7() {
        return getHeap();
    }

    @Override
    public Long component8() {
        return getHeapinit();
    }

    @Override
    public Long component9() {
        return getHeapused();
    }

    @Override
    public Long component10() {
        return getHeapcommitted();
    }

    @Override
    public Long component11() {
        return getPeakthreads();
    }

    @Override
    public Long component12() {
        return getDaemonthreads();
    }

    @Override
    public Long component13() {
        return getTotalthreads();
    }

    @Override
    public Long component14() {
        return getActivethreads();
    }

    @Override
    public Timestamp value1() {
        return getTimestamp();
    }

    @Override
    public String value2() {
        return getAppname();
    }

    @Override
    public String value3() {
        return getInstancename();
    }

    @Override
    public Double value4() {
        return getProcesscpuload();
    }

    @Override
    public Long value5() {
        return getInstanceuptime();
    }

    @Override
    public Long value6() {
        return getInstancestarttime();
    }

    @Override
    public Long value7() {
        return getHeap();
    }

    @Override
    public Long value8() {
        return getHeapinit();
    }

    @Override
    public Long value9() {
        return getHeapused();
    }

    @Override
    public Long value10() {
        return getHeapcommitted();
    }

    @Override
    public Long value11() {
        return getPeakthreads();
    }

    @Override
    public Long value12() {
        return getDaemonthreads();
    }

    @Override
    public Long value13() {
        return getTotalthreads();
    }

    @Override
    public Long value14() {
        return getActivethreads();
    }

    @Override
    public BithonJvmMetricsRecord value1(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value2(String value) {
        setAppname(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value3(String value) {
        setInstancename(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value4(Double value) {
        setProcesscpuload(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value5(Long value) {
        setInstanceuptime(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value6(Long value) {
        setInstancestarttime(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value7(Long value) {
        setHeap(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value8(Long value) {
        setHeapinit(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value9(Long value) {
        setHeapused(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value10(Long value) {
        setHeapcommitted(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value11(Long value) {
        setPeakthreads(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value12(Long value) {
        setDaemonthreads(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value13(Long value) {
        setTotalthreads(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord value14(Long value) {
        setActivethreads(value);
        return this;
    }

    @Override
    public BithonJvmMetricsRecord values(Timestamp value1, String value2, String value3, Double value4, Long value5, Long value6, Long value7, Long value8, Long value9, Long value10, Long value11, Long value12, Long value13, Long value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BithonJvmMetricsRecord
     */
    public BithonJvmMetricsRecord() {
        super(BithonJvmMetrics.BITHON_JVM_METRICS);
    }

    /**
     * Create a detached, initialised BithonJvmMetricsRecord
     */
    public BithonJvmMetricsRecord(Timestamp timestamp, String appname, String instancename, Double processcpuload, Long instanceuptime, Long instancestarttime, Long heap, Long heapinit, Long heapused, Long heapcommitted, Long peakthreads, Long daemonthreads, Long totalthreads, Long activethreads) {
        super(BithonJvmMetrics.BITHON_JVM_METRICS);

        set(0, timestamp);
        set(1, appname);
        set(2, instancename);
        set(3, processcpuload);
        set(4, instanceuptime);
        set(5, instancestarttime);
        set(6, heap);
        set(7, heapinit);
        set(8, heapused);
        set(9, heapcommitted);
        set(10, peakthreads);
        set(11, daemonthreads);
        set(12, totalthreads);
        set(13, activethreads);
    }
}
