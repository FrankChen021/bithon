<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.bithon.agent</groupId>
    <artifactId>agent-all</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>agent-configuration</artifactId>
  <packaging>jar</packaging>

  <dependencies>
    <!-- Jackson for JSON generation -->
    <dependency>
      <groupId>org.bithon.shaded</groupId>
      <artifactId>shaded-jackson</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Component commons for logging -->
    <dependency>
      <groupId>org.bithon.component</groupId>
      <artifactId>component-commons</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Agent instrumentation for class loaders -->
    <dependency>
      <groupId>org.bithon.agent</groupId>
      <artifactId>agent-instrumentation</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <!-- Disable annotation processing for this module to avoid circular dependency -->
              <compilerArgument>-proc:none</compilerArgument>
              <!-- Override parent configuration to disable annotation processor paths -->
              <annotationProcessorPaths combine.self="override">
                <!-- Empty to disable annotation processing -->
              </annotationProcessorPaths>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
