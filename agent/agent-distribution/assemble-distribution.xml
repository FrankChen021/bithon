<assembly xmlns="http://maven.apache.org/ASSEMBLY/2.1.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/ASSEMBLY/2.1.0 http://maven.apache.org/xsd/assembly-2.1.0.xsd">
  <id>main</id>

  <formats>
    <!--
      Specifies the formats of the assembly. It is often better to specify the formats via the goal parameter rather than here.
      For example, that allows different profiles to generate different types of archives.
      Multiple formats can be supplied and the Assembly Plugin will generate an archive for each of the desired formats.
      When deploying your project, all file formats specified will also be deployed.
      A format is specified by supplying one of the following values in a <format> subelement:
        "zip" - Creates a ZIP file format
        "tar" - Creates a TAR format
        "tar.gz" or "tgz" - Creates a gzip'd TAR format
        "tar.bz2" or "tbz2" - Creates a bzip'd TAR format
        "tar.snappy" - Creates a snappy'd TAR format
        "tar.xz" or "txz" - Creates a xz'd TAR format
        "jar" - Creates a JAR format
        "dir" - Creates an exploded directory format
        "war" - Creates a WAR format
    -->
    <format>dir</format>
  </formats>
  <includeBaseDirectory>true</includeBaseDirectory>

  <dependencySets>
    <!-- agent entry point -->
    <dependencySet>
      <useProjectArtifact>false</useProjectArtifact>
      <includes>
        <include>${project.parent.groupId}:agent-main</include>
      </includes>
      <outputDirectory>/</outputDirectory>
      <outputFileNameMapping>agent-main.jar</outputFileNameMapping>
    </dependencySet>

    <!-- boot-class-path -->
    <dependencySet>
      <useProjectArtifact>false</useProjectArtifact>
      <includes>
        <include>${project.parent.groupId}:agent-instrumentation</include>
      </includes>
      <outputDirectory>/boot</outputDirectory>
      <outputFileNameMapping>agent-instrumentation.jar</outputFileNameMapping>
    </dependencySet>
    <dependencySet>
      <useProjectArtifact>false</useProjectArtifact>
      <includes>
        <include>org.bithon.shaded:shaded-bytebuddy</include>
      </includes>
      <outputDirectory>boot</outputDirectory>
      <outputFileNameMapping>shaded-bytebuddy.jar</outputFileNameMapping>
    </dependencySet>

    <!-- lib -->
    <dependencySet>
      <useProjectArtifact>false</useProjectArtifact>
      <excludes>
        <exclude>org.bithon.shaded:shaded-bytebuddy</exclude>
        <exclude>${project.parent.groupId}:agent-instrumentation</exclude>
        <exclude>${project.parent.groupId}:agent-main</exclude>
        <exclude>${project.parent.groupId}:agent-sdk</exclude>

        <!-- Plugins are in a dedicated directory, exclude them from lib -->
        <exclude>${project.parent.groupId}:agent-plugin-*</exclude>

        <!--async profiler -->
        <exclude>tools.profiler:jfr-converter</exclude>
        <exclude>tools.profiler:async-profiler</exclude>
      </excludes>
      <outputDirectory>lib</outputDirectory>
    </dependencySet>

    <!-- async profiler tool -->
    <dependencySet>
      <useProjectArtifact>false</useProjectArtifact>
      <includes>
        <include>tools.profiler:jfr-converter</include>
      </includes>
      <outputDirectory>tools/async-profiler</outputDirectory>
      <outputFileNameMapping>async-profiler-converter.jar</outputFileNameMapping>
    </dependencySet>
    <dependencySet>
      <useProjectArtifact>false</useProjectArtifact>
      <includes>
        <include>tools.profiler:async-profiler</include>
      </includes>
      <outputDirectory>tools/async-profiler</outputDirectory>
      <outputFileNameMapping>async-profiler.jar</outputFileNameMapping>
    </dependencySet>

    <!-- sdk -->
    <dependencySet>
      <useProjectArtifact>false</useProjectArtifact>
      <includes>
        <include>${project.parent.groupId}:agent-sdk</include>
      </includes>
      <outputDirectory>/sdk</outputDirectory>
      <outputFileNameMapping>agent-sdk.jar</outputFileNameMapping>
    </dependencySet>
  </dependencySets>

  <fileSets>
    <!-- configuration files -->
    <fileSet>
      <directory>resources</directory>
      <outputDirectory>conf</outputDirectory>
      <includes>
        <include>*.yml</include>
      </includes>
    </fileSet>

    <!-- tools -->
    <fileSet>
      <directory>tools</directory>
      <outputDirectory>tools</outputDirectory>
      <includes>
        <include>**/*</include>
      </includes>
    </fileSet>
  </fileSets>

  <files>
    <file>
      <source>target/agent-distribution-plugins.jar</source>
      <outputDirectory>plugins</outputDirectory>
      <destName>all-in-one.jar</destName>
    </file>
    <file>
      <source>target/plugins.meta</source>
      <outputDirectory>plugins</outputDirectory>
      <destName>plugins.meta</destName>
    </file>
  </files>

</assembly>