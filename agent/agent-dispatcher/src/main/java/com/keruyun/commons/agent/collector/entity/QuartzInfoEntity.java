/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.keruyun.commons.agent.collector.entity;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * ************************* Quartz Job&Trigger列表和执行日志  *************
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2020-06-10")
public class QuartzInfoEntity implements org.apache.thrift.TBase<QuartzInfoEntity, QuartzInfoEntity._Fields>, java.io.Serializable, Cloneable, Comparable<QuartzInfoEntity> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QuartzInfoEntity");

  private static final org.apache.thrift.protocol.TField APP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("appName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField HOST_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("hostName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PORT_FIELD_DESC = new org.apache.thrift.protocol.TField("port", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField JOB_TRIGGER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("jobTriggerList", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField JOB_TRIGGER_LOG_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("jobTriggerLogList", org.apache.thrift.protocol.TType.LIST, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new QuartzInfoEntityStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new QuartzInfoEntityTupleSchemeFactory();

  public String appName; // optional
  public String hostName; // optional
  public int port; // optional
  public java.util.List<JobTriggerEntity> jobTriggerList; // required
  public java.util.List<java.util.Map<String, String>> jobTriggerLogList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    APP_NAME((short)1, "appName"),
    HOST_NAME((short)2, "hostName"),
    PORT((short)3, "port"),
    JOB_TRIGGER_LIST((short)4, "jobTriggerList"),
    JOB_TRIGGER_LOG_LIST((short)5, "jobTriggerLogList");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // APP_NAME
          return APP_NAME;
        case 2: // HOST_NAME
          return HOST_NAME;
        case 3: // PORT
          return PORT;
        case 4: // JOB_TRIGGER_LIST
          return JOB_TRIGGER_LIST;
        case 5: // JOB_TRIGGER_LOG_LIST
          return JOB_TRIGGER_LOG_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PORT_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.APP_NAME,_Fields.HOST_NAME,_Fields.PORT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.APP_NAME, new org.apache.thrift.meta_data.FieldMetaData("appName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HOST_NAME, new org.apache.thrift.meta_data.FieldMetaData("hostName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PORT, new org.apache.thrift.meta_data.FieldMetaData("port", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.JOB_TRIGGER_LIST, new org.apache.thrift.meta_data.FieldMetaData("jobTriggerList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "JobTriggerEntity"))));
    tmpMap.put(_Fields.JOB_TRIGGER_LOG_LIST, new org.apache.thrift.meta_data.FieldMetaData("jobTriggerLogList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QuartzInfoEntity.class, metaDataMap);
  }

  public QuartzInfoEntity() {
  }

  public QuartzInfoEntity(
    java.util.List<JobTriggerEntity> jobTriggerList,
    java.util.List<java.util.Map<String, String>> jobTriggerLogList)
  {
    this();
    this.jobTriggerList = jobTriggerList;
    this.jobTriggerLogList = jobTriggerLogList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QuartzInfoEntity(QuartzInfoEntity other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAppName()) {
      this.appName = other.appName;
    }
    if (other.isSetHostName()) {
      this.hostName = other.hostName;
    }
    this.port = other.port;
    if (other.isSetJobTriggerList()) {
      java.util.List<JobTriggerEntity> __this__jobTriggerList = new java.util.ArrayList<JobTriggerEntity>(other.jobTriggerList.size());
      for (JobTriggerEntity other_element : other.jobTriggerList) {
        __this__jobTriggerList.add(new JobTriggerEntity(other_element));
      }
      this.jobTriggerList = __this__jobTriggerList;
    }
    if (other.isSetJobTriggerLogList()) {
      java.util.List<java.util.Map<String, String>> __this__jobTriggerLogList = new java.util.ArrayList<java.util.Map<String, String>>(other.jobTriggerLogList.size());
      for (java.util.Map<String, String> other_element : other.jobTriggerLogList) {
        java.util.Map<String, String> __this__jobTriggerLogList_copy = new java.util.HashMap<String, String>(other_element);
        __this__jobTriggerLogList.add(__this__jobTriggerLogList_copy);
      }
      this.jobTriggerLogList = __this__jobTriggerLogList;
    }
  }

  public QuartzInfoEntity deepCopy() {
    return new QuartzInfoEntity(this);
  }

  @Override
  public void clear() {
    this.appName = null;
    this.hostName = null;
    setPortIsSet(false);
    this.port = 0;
    this.jobTriggerList = null;
    this.jobTriggerLogList = null;
  }

  public String getAppName() {
    return this.appName;
  }

  public QuartzInfoEntity setAppName(String appName) {
    this.appName = appName;
    return this;
  }

  public void unsetAppName() {
    this.appName = null;
  }

  /** Returns true if field appName is set (has been assigned a value) and false otherwise */
  public boolean isSetAppName() {
    return this.appName != null;
  }

  public void setAppNameIsSet(boolean value) {
    if (!value) {
      this.appName = null;
    }
  }

  public String getHostName() {
    return this.hostName;
  }

  public QuartzInfoEntity setHostName(String hostName) {
    this.hostName = hostName;
    return this;
  }

  public void unsetHostName() {
    this.hostName = null;
  }

  /** Returns true if field hostName is set (has been assigned a value) and false otherwise */
  public boolean isSetHostName() {
    return this.hostName != null;
  }

  public void setHostNameIsSet(boolean value) {
    if (!value) {
      this.hostName = null;
    }
  }

  public int getPort() {
    return this.port;
  }

  public QuartzInfoEntity setPort(int port) {
    this.port = port;
    setPortIsSet(true);
    return this;
  }

  public void unsetPort() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PORT_ISSET_ID);
  }

  /** Returns true if field port is set (has been assigned a value) and false otherwise */
  public boolean isSetPort() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PORT_ISSET_ID);
  }

  public void setPortIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PORT_ISSET_ID, value);
  }

  public int getJobTriggerListSize() {
    return (this.jobTriggerList == null) ? 0 : this.jobTriggerList.size();
  }

  public java.util.Iterator<JobTriggerEntity> getJobTriggerListIterator() {
    return (this.jobTriggerList == null) ? null : this.jobTriggerList.iterator();
  }

  public void addToJobTriggerList(JobTriggerEntity elem) {
    if (this.jobTriggerList == null) {
      this.jobTriggerList = new java.util.ArrayList<JobTriggerEntity>();
    }
    this.jobTriggerList.add(elem);
  }

  public java.util.List<JobTriggerEntity> getJobTriggerList() {
    return this.jobTriggerList;
  }

  public QuartzInfoEntity setJobTriggerList(java.util.List<JobTriggerEntity> jobTriggerList) {
    this.jobTriggerList = jobTriggerList;
    return this;
  }

  public void unsetJobTriggerList() {
    this.jobTriggerList = null;
  }

  /** Returns true if field jobTriggerList is set (has been assigned a value) and false otherwise */
  public boolean isSetJobTriggerList() {
    return this.jobTriggerList != null;
  }

  public void setJobTriggerListIsSet(boolean value) {
    if (!value) {
      this.jobTriggerList = null;
    }
  }

  public int getJobTriggerLogListSize() {
    return (this.jobTriggerLogList == null) ? 0 : this.jobTriggerLogList.size();
  }

  public java.util.Iterator<java.util.Map<String, String>> getJobTriggerLogListIterator() {
    return (this.jobTriggerLogList == null) ? null : this.jobTriggerLogList.iterator();
  }

  public void addToJobTriggerLogList(java.util.Map<String, String> elem) {
    if (this.jobTriggerLogList == null) {
      this.jobTriggerLogList = new java.util.ArrayList<java.util.Map<String, String>>();
    }
    this.jobTriggerLogList.add(elem);
  }

  public java.util.List<java.util.Map<String, String>> getJobTriggerLogList() {
    return this.jobTriggerLogList;
  }

  public QuartzInfoEntity setJobTriggerLogList(java.util.List<java.util.Map<String, String>> jobTriggerLogList) {
    this.jobTriggerLogList = jobTriggerLogList;
    return this;
  }

  public void unsetJobTriggerLogList() {
    this.jobTriggerLogList = null;
  }

  /** Returns true if field jobTriggerLogList is set (has been assigned a value) and false otherwise */
  public boolean isSetJobTriggerLogList() {
    return this.jobTriggerLogList != null;
  }

  public void setJobTriggerLogListIsSet(boolean value) {
    if (!value) {
      this.jobTriggerLogList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case APP_NAME:
      if (value == null) {
        unsetAppName();
      } else {
        setAppName((String)value);
      }
      break;

    case HOST_NAME:
      if (value == null) {
        unsetHostName();
      } else {
        setHostName((String)value);
      }
      break;

    case PORT:
      if (value == null) {
        unsetPort();
      } else {
        setPort((Integer)value);
      }
      break;

    case JOB_TRIGGER_LIST:
      if (value == null) {
        unsetJobTriggerList();
      } else {
        setJobTriggerList((java.util.List<JobTriggerEntity>)value);
      }
      break;

    case JOB_TRIGGER_LOG_LIST:
      if (value == null) {
        unsetJobTriggerLogList();
      } else {
        setJobTriggerLogList((java.util.List<java.util.Map<String, String>>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case APP_NAME:
      return getAppName();

    case HOST_NAME:
      return getHostName();

    case PORT:
      return getPort();

    case JOB_TRIGGER_LIST:
      return getJobTriggerList();

    case JOB_TRIGGER_LOG_LIST:
      return getJobTriggerLogList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case APP_NAME:
      return isSetAppName();
    case HOST_NAME:
      return isSetHostName();
    case PORT:
      return isSetPort();
    case JOB_TRIGGER_LIST:
      return isSetJobTriggerList();
    case JOB_TRIGGER_LOG_LIST:
      return isSetJobTriggerLogList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QuartzInfoEntity)
      return this.equals((QuartzInfoEntity)that);
    return false;
  }

  public boolean equals(QuartzInfoEntity that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_appName = true && this.isSetAppName();
    boolean that_present_appName = true && that.isSetAppName();
    if (this_present_appName || that_present_appName) {
      if (!(this_present_appName && that_present_appName))
        return false;
      if (!this.appName.equals(that.appName))
        return false;
    }

    boolean this_present_hostName = true && this.isSetHostName();
    boolean that_present_hostName = true && that.isSetHostName();
    if (this_present_hostName || that_present_hostName) {
      if (!(this_present_hostName && that_present_hostName))
        return false;
      if (!this.hostName.equals(that.hostName))
        return false;
    }

    boolean this_present_port = true && this.isSetPort();
    boolean that_present_port = true && that.isSetPort();
    if (this_present_port || that_present_port) {
      if (!(this_present_port && that_present_port))
        return false;
      if (this.port != that.port)
        return false;
    }

    boolean this_present_jobTriggerList = true && this.isSetJobTriggerList();
    boolean that_present_jobTriggerList = true && that.isSetJobTriggerList();
    if (this_present_jobTriggerList || that_present_jobTriggerList) {
      if (!(this_present_jobTriggerList && that_present_jobTriggerList))
        return false;
      if (!this.jobTriggerList.equals(that.jobTriggerList))
        return false;
    }

    boolean this_present_jobTriggerLogList = true && this.isSetJobTriggerLogList();
    boolean that_present_jobTriggerLogList = true && that.isSetJobTriggerLogList();
    if (this_present_jobTriggerLogList || that_present_jobTriggerLogList) {
      if (!(this_present_jobTriggerLogList && that_present_jobTriggerLogList))
        return false;
      if (!this.jobTriggerLogList.equals(that.jobTriggerLogList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAppName()) ? 131071 : 524287);
    if (isSetAppName())
      hashCode = hashCode * 8191 + appName.hashCode();

    hashCode = hashCode * 8191 + ((isSetHostName()) ? 131071 : 524287);
    if (isSetHostName())
      hashCode = hashCode * 8191 + hostName.hashCode();

    hashCode = hashCode * 8191 + ((isSetPort()) ? 131071 : 524287);
    if (isSetPort())
      hashCode = hashCode * 8191 + port;

    hashCode = hashCode * 8191 + ((isSetJobTriggerList()) ? 131071 : 524287);
    if (isSetJobTriggerList())
      hashCode = hashCode * 8191 + jobTriggerList.hashCode();

    hashCode = hashCode * 8191 + ((isSetJobTriggerLogList()) ? 131071 : 524287);
    if (isSetJobTriggerLogList())
      hashCode = hashCode * 8191 + jobTriggerLogList.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(QuartzInfoEntity other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAppName()).compareTo(other.isSetAppName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appName, other.appName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHostName()).compareTo(other.isSetHostName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHostName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hostName, other.hostName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPort()).compareTo(other.isSetPort());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPort()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.port, other.port);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobTriggerList()).compareTo(other.isSetJobTriggerList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobTriggerList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobTriggerList, other.jobTriggerList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobTriggerLogList()).compareTo(other.isSetJobTriggerLogList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobTriggerLogList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobTriggerLogList, other.jobTriggerLogList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QuartzInfoEntity(");
    boolean first = true;

    if (isSetAppName()) {
      sb.append("appName:");
      if (this.appName == null) {
        sb.append("null");
      } else {
        sb.append(this.appName);
      }
      first = false;
    }
    if (isSetHostName()) {
      if (!first) sb.append(", ");
      sb.append("hostName:");
      if (this.hostName == null) {
        sb.append("null");
      } else {
        sb.append(this.hostName);
      }
      first = false;
    }
    if (isSetPort()) {
      if (!first) sb.append(", ");
      sb.append("port:");
      sb.append(this.port);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("jobTriggerList:");
    if (this.jobTriggerList == null) {
      sb.append("null");
    } else {
      sb.append(this.jobTriggerList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jobTriggerLogList:");
    if (this.jobTriggerLogList == null) {
      sb.append("null");
    } else {
      sb.append(this.jobTriggerLogList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QuartzInfoEntityStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public QuartzInfoEntityStandardScheme getScheme() {
      return new QuartzInfoEntityStandardScheme();
    }
  }

  private static class QuartzInfoEntityStandardScheme extends org.apache.thrift.scheme.StandardScheme<QuartzInfoEntity> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QuartzInfoEntity struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // APP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appName = iprot.readString();
              struct.setAppNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // HOST_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hostName = iprot.readString();
              struct.setHostNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PORT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.port = iprot.readI32();
              struct.setPortIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // JOB_TRIGGER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list84 = iprot.readListBegin();
                struct.jobTriggerList = new java.util.ArrayList<JobTriggerEntity>(_list84.size);
                JobTriggerEntity _elem85;
                for (int _i86 = 0; _i86 < _list84.size; ++_i86)
                {
                  _elem85 = new JobTriggerEntity();
                  _elem85.read(iprot);
                  struct.jobTriggerList.add(_elem85);
                }
                iprot.readListEnd();
              }
              struct.setJobTriggerListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // JOB_TRIGGER_LOG_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list87 = iprot.readListBegin();
                struct.jobTriggerLogList = new java.util.ArrayList<java.util.Map<String, String>>(_list87.size);
                java.util.Map<String, String> _elem88;
                for (int _i89 = 0; _i89 < _list87.size; ++_i89)
                {
                  {
                    org.apache.thrift.protocol.TMap _map90 = iprot.readMapBegin();
                    _elem88 = new java.util.HashMap<String, String>(2*_map90.size);
                    String _key91;
                    String _val92;
                    for (int _i93 = 0; _i93 < _map90.size; ++_i93)
                    {
                      _key91 = iprot.readString();
                      _val92 = iprot.readString();
                      _elem88.put(_key91, _val92);
                    }
                    iprot.readMapEnd();
                  }
                  struct.jobTriggerLogList.add(_elem88);
                }
                iprot.readListEnd();
              }
              struct.setJobTriggerLogListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QuartzInfoEntity struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.appName != null) {
        if (struct.isSetAppName()) {
          oprot.writeFieldBegin(APP_NAME_FIELD_DESC);
          oprot.writeString(struct.appName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.hostName != null) {
        if (struct.isSetHostName()) {
          oprot.writeFieldBegin(HOST_NAME_FIELD_DESC);
          oprot.writeString(struct.hostName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPort()) {
        oprot.writeFieldBegin(PORT_FIELD_DESC);
        oprot.writeI32(struct.port);
        oprot.writeFieldEnd();
      }
      if (struct.jobTriggerList != null) {
        oprot.writeFieldBegin(JOB_TRIGGER_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.jobTriggerList.size()));
          for (JobTriggerEntity _iter94 : struct.jobTriggerList)
          {
            _iter94.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.jobTriggerLogList != null) {
        oprot.writeFieldBegin(JOB_TRIGGER_LOG_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, struct.jobTriggerLogList.size()));
          for (java.util.Map<String, String> _iter95 : struct.jobTriggerLogList)
          {
            {
              oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, _iter95.size()));
              for (java.util.Map.Entry<String, String> _iter96 : _iter95.entrySet())
              {
                oprot.writeString(_iter96.getKey());
                oprot.writeString(_iter96.getValue());
              }
              oprot.writeMapEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QuartzInfoEntityTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public QuartzInfoEntityTupleScheme getScheme() {
      return new QuartzInfoEntityTupleScheme();
    }
  }

  private static class QuartzInfoEntityTupleScheme extends org.apache.thrift.scheme.TupleScheme<QuartzInfoEntity> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QuartzInfoEntity struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetAppName()) {
        optionals.set(0);
      }
      if (struct.isSetHostName()) {
        optionals.set(1);
      }
      if (struct.isSetPort()) {
        optionals.set(2);
      }
      if (struct.isSetJobTriggerList()) {
        optionals.set(3);
      }
      if (struct.isSetJobTriggerLogList()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetAppName()) {
        oprot.writeString(struct.appName);
      }
      if (struct.isSetHostName()) {
        oprot.writeString(struct.hostName);
      }
      if (struct.isSetPort()) {
        oprot.writeI32(struct.port);
      }
      if (struct.isSetJobTriggerList()) {
        {
          oprot.writeI32(struct.jobTriggerList.size());
          for (JobTriggerEntity _iter97 : struct.jobTriggerList)
          {
            _iter97.write(oprot);
          }
        }
      }
      if (struct.isSetJobTriggerLogList()) {
        {
          oprot.writeI32(struct.jobTriggerLogList.size());
          for (java.util.Map<String, String> _iter98 : struct.jobTriggerLogList)
          {
            {
              oprot.writeI32(_iter98.size());
              for (java.util.Map.Entry<String, String> _iter99 : _iter98.entrySet())
              {
                oprot.writeString(_iter99.getKey());
                oprot.writeString(_iter99.getValue());
              }
            }
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QuartzInfoEntity struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.appName = iprot.readString();
        struct.setAppNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.hostName = iprot.readString();
        struct.setHostNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.port = iprot.readI32();
        struct.setPortIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list100 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.jobTriggerList = new java.util.ArrayList<JobTriggerEntity>(_list100.size);
          JobTriggerEntity _elem101;
          for (int _i102 = 0; _i102 < _list100.size; ++_i102)
          {
            _elem101 = new JobTriggerEntity();
            _elem101.read(iprot);
            struct.jobTriggerList.add(_elem101);
          }
        }
        struct.setJobTriggerListIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list103 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, iprot.readI32());
          struct.jobTriggerLogList = new java.util.ArrayList<java.util.Map<String, String>>(_list103.size);
          java.util.Map<String, String> _elem104;
          for (int _i105 = 0; _i105 < _list103.size; ++_i105)
          {
            {
              org.apache.thrift.protocol.TMap _map106 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
              _elem104 = new java.util.HashMap<String, String>(2*_map106.size);
              String _key107;
              String _val108;
              for (int _i109 = 0; _i109 < _map106.size; ++_i109)
              {
                _key107 = iprot.readString();
                _val108 = iprot.readString();
                _elem104.put(_key107, _val108);
              }
            }
            struct.jobTriggerLogList.add(_elem104);
          }
        }
        struct.setJobTriggerLogListIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

